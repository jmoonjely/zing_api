<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">



	<flow name="getcustomerFlow">

		<!-- Extract the customer id from the url -->

		<set-variable variableName="key"
			value="#[message.inboundProperties.'http.uri.params'.id]" doc:name="Variable" />
		<logger message="#[flowVars.logprefix] - Key - #[flowVars.key]"
			level="INFO" doc:name="Log key" />

		<!-- This is a bean class is only used as a facade to hide the DB processing 
			in this POC. This class will take care of all the Database processing operations -->

		<invoke object-ref="zingDBFacade" method="getCustomer"
			doc:name="DBFacade for DB processing" methodArguments="#[flowVars.key]" />

		<scripting:component doc:name="Script">
			<scripting:script engine="Groovy"><![CDATA[if(payload instanceof org.mule.transport.NullPayload){
			 throw new org.mule.module.apikit.exception.NotFoundException("Does not exist!");
			 }else{
			 return payload;
			 }
				]]></scripting:script>
		</scripting:component>


		<logger message="#[flowVars.logprefix] - get customer completed"
			level="INFO" doc:name="Log Completed" />

	</flow>
</mule>
